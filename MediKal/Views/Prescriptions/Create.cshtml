@model MediKal.Models.PrescriptionViewModel

@{
    ViewBag.Title = "View";
    Layout = "~/Views/Shared/_ManagementLayout.cshtml";
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <br />
    <br />
    <div class="row">
        <div class="col-sm-1 col-md-1 col-lg-4 col-xl-4"></div>
        <div class="col-sm-10 col-md-10 col-lg-4 col-xl-4">
            <img src="~/images/prescription.png" height="100" width="100" />
            <h4>Add Prescription</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.prescription.Id)

            <div class="form-group">
                @Html.LabelFor(model => model.DoctorId, htmlAttributes: new { @class = "control-label" })
                <div>
                    @Html.EditorFor(model => model.DoctorId, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.DoctorId, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.NumOfTimes, htmlAttributes: new { @class = "control-label" })
                <div>
                    @Html.EditorFor(model => model.NumOfTimes, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.NumOfTimes, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Frequency, htmlAttributes: new { @class = "control-label" })
                <div>
                    @Html.EnumDropDownListFor(model => model.Frequency, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Frequency, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.StartTime, htmlAttributes: new { @class = "control-label" })
                <div>
                    @Html.EditorFor(model => model.StartTime, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.StartTime, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.EndTime, htmlAttributes: new { @class = "control-label" })
                <div>
                    @Html.EditorFor(model => model.EndTime, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.EndTime, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.MedicineId, htmlAttributes: new { @class = "control-label" })
                <div>
                    @Html.EditorFor(model => model.MedicineId, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.MedicineId, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Comments, htmlAttributes: new { @class = "control-label" })
                <div>
                    @Html.EditorFor(model => model.Comments, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Comments, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Save" class="btn blue-btn" />
                    <a href="~/Medicines" class="btn green-btn">Back to List</a>
                </div>
            </div>
        </div>
</div>
    }
